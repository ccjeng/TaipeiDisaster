{"version":3,"sources":["main.js"],"names":["isEmpty","str","length","getLocation","successCallback","position","currentLocationLatitude","coords","latitude","currentLocationLongitude","longitude","currentMarker","errorCallback","error","errorTypes",1,2,3,"alert","code","console","log","message","navigator","geolocation","option","enableAcuracy","maximumAge","timeout","getCurrentPosition","GeoMarker","GeolocationMarker","map","setCircleOptions","fillColor","google","maps","event","addListenerOnce","setCenter","this","getPosition","fitBounds","getBounds","addListener","e","setMap","app","angular","module","defaultLocationLatitude","defaultLocationLongitude","controller","$scope","$http","orderByField","reverseSort","mapOptions","center","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","Map","document","getElementById","markers","infoWindow","InfoWindow","createMarker","data","pinImage","word","pinColor","CaseComplete","PName","MarkerImage","marker","Marker","Wgs84Y","Wgs84X","title","Name","pid","toLowerCase","icon","content","CaseTime","CaseLocationDescription","CaseDescription","setContent","open","push","total","路樹災情","民生、基礎設施災情","建物毀損","廣告招牌災情","積淹水災情","其他災情","環境污染","土石災情","道路、隧道災情","水利設施災情","鐵路、高鐵及捷運災情","車輛及交通事故","doneTotal","get","success","status","headers","config","d","DataSet","NewDataSet","dataTime","cases","caseDone","caseInProgress","caseRate","i","toFixed","MarkerClusterer","gridSize","maxZoom","decisions","itemClicked","index","trigger"],"mappings":"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","file":"all.min.js","sourcesContent":["\n(function(){\n\nvar app = angular.module('app', []);\nvar map;\n\n//Get user location\nvar defaultLocationLatitude = 25.06464;\nvar defaultLocationLongitude = 121.55676;\n\nvar currentLocationLatitude = defaultLocationLatitude;\nvar currentLocationLongitude = defaultLocationLongitude;\n\nfunction getLocation() {\n  if (navigator.geolocation) {\n        var option={\n            enableAcuracy:false,\n            maximumAge:0,\n            timeout:600000\n        };\n        navigator.geolocation.getCurrentPosition(successCallback, errorCallback, option);\n  }\n  else {\n        alert('此瀏覽器不支援地理定位功能!');\n  }\n\n  function successCallback(position) {\n        currentLocationLatitude = position.coords.latitude;\n        currentLocationLongitude = position.coords.longitude;  \n        currentMarker(); \n  }\n\n  function errorCallback(error) {\n        var errorTypes={\n              0:'不明原因錯誤',\n              1:'使用者拒絕提供位置資訊',\n              2:'無法取得位置資訊',\n              3:'位置查詢逾時'\n              };\n        alert(errorTypes[error.code]);\n        console.log('code=' + error.code + ' ' + error.message); //開發測試時用\n  }\n}\n\nfunction currentMarker(){\n\n  var GeoMarker = new GeolocationMarker(map);\n\n  GeoMarker.setCircleOptions({fillColor: '#808080'});\n\n  google.maps.event.addListenerOnce(GeoMarker, 'position_changed', function() {\n     map.setCenter(this.getPosition());\n     map.fitBounds(this.getBounds());\n  });\n\n  google.maps.event.addListener(GeoMarker, 'geolocation_error', function(e) {\n     alert('無法取得位置資訊. ' + e.message);\n  });\n\n  GeoMarker.setMap(map);\n\n}\n\napp.controller('GetDisasterSummary', ['$scope', '$http', function($scope, $http) {\n\n    $scope.orderByField = 'CaseTime';\n    $scope.reverseSort = true;\n\n\n    var mapOptions = {\n \t\tcenter: new google.maps.LatLng(currentLocationLatitude, currentLocationLongitude),\n    \tzoom: 13,\n    \tmapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n\n    getLocation();\n\n    map = new google.maps.Map(document.getElementById('map'), mapOptions);\n\n    $scope.map = map;\n\n    $scope.markers = [];\n\n    var infoWindow = new google.maps.InfoWindow();\n\n    var createMarker = function (data){\n      \n        var pinColor = (data.CaseComplete === \"true\") ? \"80e516\" : \"FE7569\";\n        var pinImage; \n        var word;\n\n        switch(data.PName) {\n          case '路樹災情':\n              word='樹';\n              break;\n          case '民生、基礎設施災情':\n              word='民';\n              break;\n          case '建物毀損':\n              word='建';\n              break;\n          case '廣告招牌災情':\n              word='廣';\n              break;\n          case '積淹水災情':\n              word='水';\n              break;\n          case '其他災情':\n              word='其';\n              break;\n          case '環境污染':\n              word='污';\n              break;\n          case '土石災情':\n              word='土';\n              break;\n          case '道路、隧道災情':\n              word='路';\n              break;\n          case '鐵路、高鐵及捷運災情':\n              word='運';\n              break;  \n          case '車輛及交通事故':\n              word='車';\n              break;                                   \n          default:\n              word='危';              \n        };\n\n        if(data.CaseComplete === \"true\"){\n            word = \"復\";\n            pinImage = new google.maps.MarkerImage(\"http://chart.apis.google.com/chart?chst=d_map_spin&chld=0.7|0|\"+ pinColor +\"|15|b|\"+word);\n        } else {\n            pinImage = new google.maps.MarkerImage(\"http://chart.apis.google.com/chart?chst=d_map_spin&chld=0.7|20|\"+ pinColor +\"|15|b|\"+word);\n        }\n\n        var marker = new google.maps.Marker({\n            map: $scope.map,\n            position: new google.maps.LatLng(data.Wgs84Y, data.Wgs84X),\n            title: data.PName + ' - '+ data.Name,\n            pid: data['-diffgr:id'].toLowerCase(),\n            icon: pinImage,\n            pinColor: pinColor\n        });\n\n        marker.content = '<div class=\"infoWindowContent\">發生時間：' + data.CaseTime\n          + '</br>災情地點：' + data.CaseLocationDescription\n          + '</br>災情描述：' + data.CaseDescription \n          + '</div>';\n\n        google.maps.event.addListener(marker, 'click', function(){\n            infoWindow.setContent('<h3>' + marker.title + '</h3>' + marker.content );\n            infoWindow.open($scope.map, marker);\n        });\n        \n        $scope.markers.push(marker);\n        \n    };\n\n    $scope.total = {\n      '路樹災情': 0,\n      '民生、基礎設施災情': 0,\n      '建物毀損': 0,\n      '廣告招牌災情': 0,\n      '積淹水災情': 0,\n      '其他災情': 0,\n      '環境污染': 0,\n      '土石災情': 0,\n      '道路、隧道災情': 0,\n      '水利設施災情': 0,\n      '鐵路、高鐵及捷運災情': 0,\n      '車輛及交通事故': 0\n    };\n\n    $scope.doneTotal = {\n      '路樹災情': 0,\n      '民生、基礎設施災情': 0,\n      '建物毀損': 0,\n      '廣告招牌災情': 0,\n      '積淹水災情': 0,\n      '其他災情': 0,\n      '環境污染': 0,\n      '土石災情': 0,\n      '道路、隧道災情': 0,\n      '水利設施災情': 0,\n      '鐵路、高鐵及捷運災情': 0,\n      '車輛及交通事故': 0\n    };\n\n    //$scope.listDistrict = ['中正區','大同區','中山區','松山區','大安區','萬華區','信義區','士林區','北投區','內湖區','南港區','文山區'];\n\n    //$http.get('http://tonyq.org/kptaipei/GetDisasterSummary-20150808.php')\n    //$http.get('./data/GetDisasterSummary.json')\n\n    //最新災害專案的災情資料\n    $http.get('https://tcgbusfs.blob.core.windows.net/blobfs/GetDisasterSummary.json')        \n    .success(function(data, status, headers, config) {\n      d = data.DataSet['diffgr:diffgram'].NewDataSet['CASE_SUMMARY'];\n\n      $scope.dataTime = data.DataSet['-date'];\n\n      //console.log(d);\n\n      $scope.cases = d;\n\n\n\n      var caseDone = 0, caseInProgress = 0, caseRate = 0.00;\n\n      for (i = 0; i < d.length; i++){\n        createMarker(d[i]);\n      \n        if (d[i].CaseComplete==='true') {\n            caseDone = caseDone + 1;\n  \n            if (d[i].PName==='路樹災情') {\n              $scope.doneTotal['路樹災情'] += 1;\n            }\n            if (d[i].PName==='民生、基礎設施災情') {\n              $scope.doneTotal['民生、基礎設施災情'] += 1;\n            }\n            if (d[i].PName==='建物毀損') {\n              $scope.doneTotal['建物毀損'] += 1;\n            }\n            if (d[i].PName==='廣告招牌災情') {\n              $scope.doneTotal['廣告招牌災情'] += 1;\n            }\n            if (d[i].PName==='積淹水災情') {\n              $scope.doneTotal['積淹水災情'] += 1;\n            }\n            if (d[i].PName==='其他災情') {\n              $scope.doneTotal['其他災情'] += 1;\n            }\n            if (d[i].PName==='土石災情') {\n              $scope.doneTotal['土石災情'] += 1;\n            }\n            if (d[i].PName==='道路、隧道災情') {\n              $scope.doneTotal['道路、隧道災情'] += 1;\n            }\n            if (d[i].PName==='水利設施災害') {\n              $scope.doneTotal['水利設施災情'] += 1;\n            }\n            if (d[i].PName==='鐵路、高鐵及捷運災情') {\n              $scope.doneTotal['鐵路、高鐵及捷運災情'] += 1;\n            }\n            if (d[i].PName==='車輛及交通事故') {\n              $scope.doneTotal['車輛及交通事故'] += 1;\n            }\n        }else {\n            caseInProgress = caseInProgress + 1;\n        }\n\n        if (d[i].PName==='路樹災情') {\n          $scope.total['路樹災情'] += 1;\n        }\n        if (d[i].PName==='民生、基礎設施災情') {\n          $scope.total['民生、基礎設施災情'] += 1;\n        }\n        if (d[i].PName==='建物毀損') {\n          $scope.total['建物毀損'] += 1;\n        }\n        if (d[i].PName==='廣告招牌災情') {\n          $scope.total['廣告招牌災情'] += 1;\n        }\n        if (d[i].PName==='積淹水災情') {\n          $scope.total['積淹水災情'] += 1;\n        }\n        if (d[i].PName==='其他災情') {\n          $scope.total['其他災情'] += 1;\n        }\n        if (d[i].PName==='土石災情') {\n          $scope.total['土石災情'] += 1;\n        }\n        if (d[i].PName==='道路、隧道災情') {\n          $scope.total['道路、隧道災情'] += 1;\n        }\n        if (d[i].PName==='水利設施災害') {\n          $scope.total['水利設施災情'] += 1;\n        }\n        if (d[i].PName==='鐵路、高鐵及捷運災情') {\n          $scope.total['鐵路、高鐵及捷運災情'] += 1;\n        }\n        if (d[i].PName==='車輛及交通事故') {\n          $scope.total['車輛及交通事故'] += 1;\n        }\n    \n\n      }\n\n        caseRate = 100 * caseDone / (caseDone + caseInProgress);\n\n        $scope.caseDone = caseDone;\n        $scope.caseInProgress = caseInProgress;\n        $scope.caseRate = caseRate.toFixed(2);\n\n         var mc = new MarkerClusterer($scope.map, $scope.markers, {gridSize: 80, maxZoom: 16});\n      })\n\n\n    .error(function(data, status, headers, config) {\n      // log error\n      console.log('http error');\n    });\n\n\t//最新的會報指示決策資料\n    $http.get('https://tcgbusfs.blob.core.windows.net/blobfs/GetDisasterDecisionSummary.json')        \n    .success(function(data, status, headers, config) {\n    \t$scope.decisions = data.DataSet['diffgr:diffgram'].NewDataSet['DCSDisasterDecision'];\n   \t})\n\n    .error(function(data, status, headers, config) {\n      // log error\n      console.log('http error');\n    });\n\n\n    //http://jsfiddle.net/pc7Uu/854/\n    $scope.itemClicked = function (e, index) {\n        //e.preventDefault();\n        google.maps.event.trigger($scope.markers[index], 'click');\n    };\n\n\n}]);\n\n\n})();\n\n\n\n\nfunction isEmpty(str) {\n    return ((typeof str == 'undefined')|| !str || 0 === str.length);\n}\n"],"sourceRoot":"/source/"}